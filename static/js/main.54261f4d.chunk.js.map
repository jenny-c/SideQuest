{"version":3,"sources":["Components/Navbar.jsx","Pages/SearchPage.jsx","Pages/SubmitPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","posInterests","options","interests","posKeywords","keywords","SearchPage","props","state","projects","searching","keywordSelect","bind","interestSelect","removeKeyword","removeInterest","search","alreadyIn","this","document","getElementById","value","setState","selectedIndex","text","filter","keyValue","length","object","map","console","log","axios","post","crossdomain","res","data","body","keywordsList","style","cursor","onClick","key","interestsList","projectList","width","name","src","image","alt","description","skills","i","author","push","htmlFor","placeholder","onChange","selected","role","aria-hidden","display","flexDirection","justifyContent","Component","SubmitPage","submit","e","preventDefault","onSubmit","required","rows","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mwBAGe,SAASA,IACpB,OACI,yBAAKC,UAAU,+CACX,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,aACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClL,0BAAMP,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BQ,GAAG,0BACzC,wBAAIR,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,WAA9B,sB,6BCTlBQ,EAAeC,EAAQC,UAEvBC,EAAcF,EAAQG,SAGPC,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTH,SAAU,GACVF,UAAW,CAAC,CAAC,MAAO,QACpBM,SAAU,GACVC,WAAW,GAGf,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,OAAS,EAAKA,OAAOJ,KAAZ,gBAdC,E,6EAkBf,IAAIK,GAAY,EADJ,uBAEZ,YAAyBC,KAAKV,MAAMH,SAApC,+CAA8C,CAC1C,GAD0C,QAC3B,KAAOc,SAASC,eAAe,kBAAkBC,MAAO,CACnEJ,GAAY,EACZ,QALI,kFAQPA,IACDC,KAAKI,SAAS,CACVjB,SAAS,GAAD,mBACDa,KAAKV,MAAMH,UADV,CAEJ,CACIc,SAASC,eAAe,kBAAkBC,MAC1CF,SAASC,eAAe,kBAAkBlB,QAAQiB,SAASC,eAAe,kBAAkBG,eAAeC,UAIvHL,SAASC,eAAe,kBAAkBC,MAAQ,iB,uCAKtD,IAAIJ,GAAY,EADH,uBAEb,YAAyBC,KAAKV,MAAML,UAApC,+CAA+C,CAC3C,GAD2C,QAC5B,KAAOgB,SAASC,eAAe,mBAAmBC,MAAO,CACpEJ,GAAY,EACZ,QALK,kFAQRA,IACDC,KAAKI,SAAS,CACVnB,UAAU,GAAD,mBACDe,KAAKV,MAAML,UAAUsB,QAAO,SAACJ,GAAY,MAAoB,QAAbA,EAAM,OADrD,CAEL,CACIF,SAASC,eAAe,mBAAmBC,MAC3CF,SAASC,eAAe,mBAAmBlB,QAAQiB,SAASC,eAAe,mBAAmBG,eAAeC,UAIzHL,SAASC,eAAe,mBAAmBC,MAAQ,iB,oCAI7CA,GACVH,KAAKI,SAAS,CACVjB,SAAUa,KAAKV,MAAMH,SAASoB,QAAO,SAACC,GAClC,OAAOA,EAAS,KAAOL,S,qCAKpBA,GAAQ,IAAD,OAClBH,KAAKI,SAAS,CACVnB,UAAWe,KAAKV,MAAML,UAAUsB,QAAO,SAACC,GACpC,OAAOA,EAAS,KAAOL,OAE5B,WACqC,IAAhC,EAAKb,MAAML,UAAUwB,QACrB,EAAKL,SAAS,CACVnB,UAAW,CAAC,CAAC,MAAO,e,wJAOhCe,KAAKI,SAAS,CACVZ,WAAW,IAETkB,EAAS,CACX,OAAUV,KAAKV,MAAMH,SAASwB,KAAI,SAACR,GAAY,OAAQA,EAAM,MAC7D,UAAaH,KAAKV,MAAML,UAAU0B,KAAI,SAACR,GAAY,OAAQA,EAAM,OAGrES,QAAQC,IAAIH,G,SACOI,IAAMC,KAAK,2EAA4EL,EAAQ,CAC9GM,aAAa,I,OADXC,E,OAEFC,KACJlB,KAAKI,SAAS,CACVb,SAAU0B,EAAIE,KAAK5B,SACnBC,WAAW,I,qIAIT,IAAD,OACC4B,EAAepB,KAAKV,MAAMH,SAASwB,KAAI,SAACR,GAC1C,OACI,0BAAMkB,MAAO,CAAEC,OAAQ,WAAaC,QAAS,WAAQ,EAAK3B,cAAcO,EAAM,KAAQqB,IAAKrB,EAAM,GAAI7B,UAAU,8BAA8B6B,EAAM,OAIrJsB,EAAgBzB,KAAKV,MAAML,UAAU0B,KAAI,SAACR,GAC5C,MAAiB,QAAbA,EAAM,GAEF,0BAAMkB,MAAO,CAAEC,OAAQ,WAAaE,IAAKrB,EAAM,GAAI7B,UAAU,8BAA8B6B,EAAM,IAIjG,0BAAMkB,MAAO,CAAEC,OAAQ,WAAaC,QAAS,WAAQ,EAAK1B,eAAeM,EAAM,KAAQqB,IAAKrB,EAAM,GAAI7B,UAAU,8BAA8B6B,EAAM,OAK1JuB,EAAc1B,KAAKV,MAAMC,SAASoB,KAAI,SAACR,GACzC,OACI,yBAAK7B,UAAU,iBAAiB+C,MAAO,CAAEM,MAAO,SAAWH,IAAKrB,EAAMyB,MAClE,yBAAKC,IAAK1B,EAAM2B,MAAOxD,UAAU,eAAeyD,IAAI,QACpD,yBAAKzD,UAAU,aACX,wBAAIA,UAAU,cAAc6B,EAAMyB,MAClC,uBAAGtD,UAAU,aAAa6B,EAAM6B,aAE5B7B,EAAM8B,OAAOtB,KAAI,SAACR,EAAO+B,GACrB,OACI,0BAAMb,MAAO,CAAEC,OAAQ,WAAaE,IAAKU,EAAG5D,UAAU,8BAA8B6B,MAIhG,4BAAQ7B,UAAU,0BACd,2BAAOA,UAAU,cACZ6B,EAAMgC,cAc/B,OAN2B,IAAvBT,EAAYjB,QACZiB,EAAYU,KACR,uBAAGZ,IAAI,OAAP,uBAKJ,6BACI,kBAACnD,EAAD,MACA,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,sCACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QAEX,yBAAKA,UAAU,cACX,2BAAO+D,QAAQ,QAAQ/D,UAAU,oBAAjC,cACA,2BAAOE,KAAK,OAAOF,UAAU,eAAeQ,GAAG,QAAQwD,YAAY,sCAGvE,6BACI,yBAAKhE,UAAU,6BAAf,WAGA,yBAAKA,UAAU,YACV8C,IAIT,yBAAK9C,UAAU,oBACX,4BAAQA,UAAU,gBAAgBQ,GAAG,iBAAiByD,SAAUvC,KAAKP,eACjE,4BAAQU,MAAM,cAAcqC,UAAQ,GAApC,iBAEItD,EAAYyB,KAAI,SAACR,GACb,OACI,4BAAQqB,IAAKrB,EAAM,GAAIA,MAAOA,EAAM,IAAKA,EAAM,UAQvE,yBAAK7B,UAAU,QACX,6BACI,yBAAKA,UAAU,6BAAf,kBAGA,yBAAKA,UAAU,YACVmD,IAIT,yBAAKnD,UAAU,oBACX,4BAAQA,UAAU,gBAAgBQ,GAAG,kBAAkByD,SAAUvC,KAAKL,gBAClE,4BAAQQ,MAAM,cAAcqC,UAAQ,GAApC,wBAEIzD,EAAa4B,KAAI,SAACR,GACd,OACI,4BAAQqB,IAAKrB,EAAM,GAAIA,MAAOA,EAAM,IAAKA,EAAM,WAU3E,4BAAQoB,QAASvB,KAAKF,OAAQxB,UAAU,wBACpC,6BAEQ0B,KAAKV,MAAME,UACP,0BAAMlB,UAAU,wCAAwCmE,KAAK,SAASC,cAAY,SAElF,KALZ,aAYZ,yBAAKpE,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAK+C,MAAO,CAAEsB,QAAS,OAAQC,cAAe,MAAOC,eAAgB,eAChEnB,W,GAzOOoB,aCLlC/D,EAAeC,EAAQC,UAEvBC,EAAcF,EAAQG,SAEP4D,E,YACjB,WAAY1D,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTH,SAAU,GACVF,UAAW,IAGf,EAAKQ,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKsD,OAAS,EAAKA,OAAOtD,KAAZ,gBAZC,E,6EAgBf,IAAIK,GAAY,EADJ,uBAEZ,YAAyBC,KAAKV,MAAMH,SAApC,+CAA8C,CAC1C,GAD0C,QAC3B,KAAOc,SAASC,eAAe,SAASC,MAAO,CAC1DJ,GAAY,EACZ,QALI,kFAQPA,IACDC,KAAKI,SAAS,CACVjB,SAAS,GAAD,mBACDa,KAAKV,MAAMH,UADV,CAEJ,CACIc,SAASC,eAAe,SAASC,MACjCF,SAASC,eAAe,SAASlB,QAAQiB,SAASC,eAAe,SAASG,eAAeC,UAIrGL,SAASC,eAAe,SAASC,MAAQ,iB,uCAK7C,IAAIJ,GAAY,EADH,uBAEb,YAAyBC,KAAKV,MAAML,UAApC,+CAA+C,CAC3C,GAD2C,QAC5B,KAAOgB,SAASC,eAAe,YAAYC,MAAO,CAC7DJ,GAAY,EACZ,QALK,kFAQRA,IACDC,KAAKI,SAAS,CACVnB,UAAU,GAAD,mBACDe,KAAKV,MAAML,UAAUsB,QAAO,SAACJ,GAAY,MAAoB,QAAbA,EAAM,OADrD,CAEL,CACIF,SAASC,eAAe,YAAYC,MACpCF,SAASC,eAAe,YAAYlB,QAAQiB,SAASC,eAAe,YAAYG,eAAeC,UAI3GL,SAASC,eAAe,YAAYC,MAAQ,iB,oCAItCA,GACVH,KAAKI,SAAS,CACVjB,SAAUa,KAAKV,MAAMH,SAASoB,QAAO,SAACC,GAClC,OAAOA,EAAS,KAAOL,S,qCAKpBA,GACXH,KAAKI,SAAS,CACVnB,UAAWe,KAAKV,MAAML,UAAUsB,QAAO,SAACC,GACpC,OAAOA,EAAS,KAAOL,S,sEAKtB8C,G,gFACTA,EAAEC,iBACIxC,EAAS,CACXyB,OAAQlC,SAASC,eAAe,UAAUC,MAC1C6B,YAAa/B,SAASC,eAAe,eAAeC,MACpD2B,MAAO7B,SAASC,eAAe,aAAaC,MAC5CyB,KAAM3B,SAASC,eAAe,QAAQC,MACtC8B,OAAQjC,KAAKV,MAAMH,SAASwB,KAAI,SAACR,GAAY,OAAOA,EAAM,MAC1DlB,UAAWe,KAAKV,MAAML,UAAU0B,KAAI,SAACR,GAAY,OAAOA,EAAM,O,SAE/CW,IAAMC,KAAK,uEAAwEL,EAAQ,CAC1GM,aAAa,I,OADXC,E,OAEFC,KACJN,QAAQC,IAAII,G,sIAGN,IAAD,OACCG,EAAepB,KAAKV,MAAMH,SAASwB,KAAI,SAACR,GAC1C,OACI,0BAAMkB,MAAO,CAAEC,OAAQ,WAAaC,QAAS,WAAQ,EAAK3B,cAAcO,EAAM,KAAQqB,IAAKrB,EAAM,GAAI7B,UAAU,8BAA8B6B,EAAM,OAIrJsB,EAAgBzB,KAAKV,MAAML,UAAU0B,KAAI,SAACR,GAC5C,OACI,0BAAMkB,MAAO,CAAEC,OAAQ,WAAaC,QAAS,WAAQ,EAAK1B,eAAeM,EAAM,KAAQqB,IAAKrB,EAAM,GAAI7B,UAAU,8BAA8B6B,EAAM,OAI5J,OACI,6BACI,kBAAC9B,EAAD,MACA,yBAAKC,UAAU,kBACX,0BAAM6E,SAAUnD,KAAKgD,QACjB,yBAAK1E,UAAU,cACX,2BAAO+D,QAAQ,QAAQ/D,UAAU,oBAAjC,iBACA,2BAAOE,KAAK,OAAOM,GAAG,OAAOR,UAAU,eAAegE,YAAY,aAAac,UAAQ,KAE3F,yBAAK9E,UAAU,cACX,2BAAO+D,QAAQ,SAAS/D,UAAU,oBAAlC,UACA,2BAAOE,KAAK,OAAOM,GAAG,SAASR,UAAU,eAAegE,YAAY,WAAWc,UAAQ,KAE3F,yBAAK9E,UAAU,cACX,2BAAO+D,QAAQ,2BAA2B/D,UAAU,oBAApD,iBACA,2BAAOE,KAAK,QAAQF,UAAU,eAAeQ,GAAG,2BAA2BwD,YAAY,mBAAmBc,UAAQ,KAGtH,yBAAK9E,UAAU,OACX,yBAAKA,UAAU,OACX,6BACI,yBAAKA,UAAU,6BAAf,WAGA,yBAAKA,UAAU,YACV8C,IAIT,yBAAK9C,UAAU,oBACX,4BAAQQ,GAAG,QAAQR,UAAU,gBAAgBiE,SAAUvC,KAAKP,eACxD,4BAAQU,MAAM,cAAcqC,UAAQ,GAApC,gBAEItD,EAAYyB,KAAI,SAACR,GACb,OACI,4BAAQqB,IAAKrB,EAAM,GAAIA,MAAOA,EAAM,IAAKA,EAAM,UAOvE,yBAAK7B,UAAU,OACX,6BACI,yBAAKA,UAAU,6BAAf,mBAGA,yBAAKA,UAAU,YACVmD,IAIT,yBAAKnD,UAAU,oBACX,4BAAQQ,GAAG,WAAWR,UAAU,gBAAgBiE,SAAUvC,KAAKL,gBAC3D,4BAAQQ,MAAM,cAAcqC,UAAQ,GAApC,mBAEIzD,EAAa4B,KAAI,SAACR,GACd,OACI,4BAAQqB,IAAKrB,EAAM,GAAIA,MAAOA,EAAM,IAAKA,EAAM,WAS3E,yBAAK7B,UAAU,mBACX,2BAAOA,UAAU,oBAAjB,uBACA,8BAAUQ,GAAG,cAAcR,UAAU,eAAe+E,KAAK,IAAID,UAAQ,KAEzE,yBAAK9E,UAAU,cACX,2BAAOA,UAAU,oBAAjB,aACA,2BAAOQ,GAAG,YAAYN,KAAK,OAAOF,UAAU,eAAegE,YAAY,qBAG3E,4BAAQhE,UAAU,mBAAlB,iB,GArLgBwE,aCQzBQ,MAXf,WACI,OACI,yBAAKhF,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,IAAIC,UAAWrE,IACjC,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,UAAUC,UAAWV,OCCnCW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAD,CAAeC,SAAUC,cACrB,kBAAC,EAAD,OAEJjE,SAASC,eAAe,SDsHtB,kBAAmBiE,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.54261f4d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <Link className=\"navbar-brand\" to='/'>SideQuest</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/submit\">Submit Project</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\nimport axios from 'axios';\nimport options from '../options.json';\n\nconst posInterests = options.interests;\n\nconst posKeywords = options.keywords;\n\n\nexport default class SearchPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keywords: [],\n            interests: [['all', 'All']],\n            projects: [],\n            searching: false\n        };\n\n        this.keywordSelect = this.keywordSelect.bind(this);\n        this.interestSelect = this.interestSelect.bind(this);\n        this.removeKeyword = this.removeKeyword.bind(this);\n        this.removeInterest = this.removeInterest.bind(this);\n        this.search = this.search.bind(this);\n    }\n\n    keywordSelect() {\n        let alreadyIn = false;\n        for (const keywordObj of this.state.keywords) {\n            if (keywordObj[0] === document.getElementById('keyword-select').value) {\n                alreadyIn = true;\n                break;\n            }\n        }\n        if (!alreadyIn) {\n            this.setState({\n                keywords: [\n                    ...this.state.keywords,\n                    [\n                        document.getElementById('keyword-select').value,\n                        document.getElementById('keyword-select').options[document.getElementById('keyword-select').selectedIndex].text\n                    ]\n                ]\n            });\n            document.getElementById('keyword-select').value = 'placeholder';\n        }\n    }\n\n    interestSelect() {\n        let alreadyIn = false;\n        for (const keywordObj of this.state.interests) {\n            if (keywordObj[0] === document.getElementById('interest-select').value) {\n                alreadyIn = true;\n                break;\n            }\n        }\n        if (!alreadyIn) {\n            this.setState({\n                interests: [\n                    ...(this.state.interests.filter((value) => { return value[0] !== 'all'; })),\n                    [\n                        document.getElementById('interest-select').value,\n                        document.getElementById('interest-select').options[document.getElementById('interest-select').selectedIndex].text\n                    ]\n                ]\n            });\n            document.getElementById('interest-select').value = 'placeholder';\n        }\n    }\n\n    removeKeyword(value) {\n        this.setState({\n            keywords: this.state.keywords.filter((keyValue) => {\n                return keyValue[0] !== value;\n            })\n        });\n    }\n\n    removeInterest(value) {\n        this.setState({\n            interests: this.state.interests.filter((keyValue) => {\n                return keyValue[0] !== value;\n            })\n        }, () => {\n            if (this.state.interests.length === 0) {\n                this.setState({\n                    interests: [['all', 'All']]\n                });\n            }\n        });\n    }\n\n    async search() {\n        this.setState({\n            searching: true\n        });\n        const object = {\n            'skills': this.state.keywords.map((value) => { return (value[0]); }),\n            'interests': this.state.interests.map((value) => { return (value[0]); })\n            //'query': document.getElementById('query').value\n        };\n        console.log(object);\n        const res = (await axios.post('https://us-central1-graph-intelligence.cloudfunctions.net/searchProjects', object, {\n            crossdomain: true\n        })).data;\n        this.setState({\n            projects: res.body.projects,\n            searching: false\n        });\n    }\n\n    render() {\n        const keywordsList = this.state.keywords.map((value) => {\n            return (\n                <span style={{ cursor: 'pointer' }} onClick={() => { this.removeKeyword(value[0]); }} key={value[0]} className=\"badge badge-secondary ml-1\">{value[1]}</span>\n            );\n        });\n\n        const interestsList = this.state.interests.map((value) => {\n            if (value[0] === 'all') {\n                return (\n                    <span style={{ cursor: 'pointer' }} key={value[0]} className=\"badge badge-secondary ml-1\">{value[1]}</span>\n                );\n            } else {\n                return (\n                    <span style={{ cursor: 'pointer' }} onClick={() => { this.removeInterest(value[0]); }} key={value[0]} className=\"badge badge-secondary ml-1\">{value[1]}</span>\n                );\n            }\n        });\n\n        const projectList = this.state.projects.map((value) => {\n            return (\n                <div className='card mt-1 mx-2' style={{ width: '20rem' }} key={value.name}>\n                    <img src={value.image} className=\"card-img-top\" alt=\"...\" />\n                    <div className='card-body'>\n                        <h5 className='card-title'>{value.name}</h5>\n                        <p className=\"card-text\">{value.description}</p>\n                        {\n                            value.skills.map((value, i) => {\n                                return (\n                                    <span style={{ cursor: 'pointer' }} key={i} className=\"badge badge-secondary ml-1\">{value}</span>\n                                );\n                            })\n                        }\n                        <footer className=\"mt-2 blockquote-footer\">\n                            <small className=\"text-muted\">\n                                {value.author}\n                            </small>\n                        </footer>\n                    </div>\n                </div>\n            );\n        });\n\n        if (projectList.length === 0) {\n            projectList.push(\n                <p key='key'>No projects found.</p>\n            );\n        }\n\n        return (\n            <div>\n                <Navbar />\n                <div className='container mt-4'>\n                    <div className='card'>\n                        <div className=\"card-body\">\n                            <h3>Search</h3>\n                            <div className='mt-3'>\n                                <div className='mt-3'>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"query\" className=\"font-weight-bold\">Keywords: </label>\n                                        <input type=\"text\" className=\"form-control\" id='query' placeholder=\"Enter search keywords (optional)\"></input>\n                                    </div>\n\n                                    <div>\n                                        <div className='d-inline font-weight-bold'>\n                                            Skills:\n                                        </div>\n                                        <div className='d-inline'>\n                                            {keywordsList}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"input-group mt-2\">\n                                        <select className=\"custom-select\" id=\"keyword-select\" onChange={this.keywordSelect}>\n                                            <option value='placeholder' selected>Add Skills...</option>\n                                            {\n                                                posKeywords.map((value) => {\n                                                    return (\n                                                        <option key={value[0]} value={value[0]}>{value[1]}</option>\n                                                    );\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <div className='mt-3'>\n                                    <div>\n                                        <div className='d-inline font-weight-bold'>\n                                            Related Field:\n                                        </div>\n                                        <div className='d-inline'>\n                                            {interestsList}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"input-group mt-2\">\n                                        <select className=\"custom-select\" id=\"interest-select\" onChange={this.interestSelect}>\n                                            <option value='placeholder' selected>Add Related Field...</option>\n                                            {\n                                                posInterests.map((value) => {\n                                                    return (\n                                                        <option key={value[0]} value={value[0]}>{value[1]}</option>\n                                                    );\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <button onClick={this.search} className='btn btn-primary mt-3'>\n                                <div>\n                                    {\n                                        this.state.searching ?\n                                            <span className=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\n                                            :\n                                            null\n                                    }\n                                    Search\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div className='card mt-2'>\n                        <div className=\"card-body\">\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }}>\n                                {projectList}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\nimport options from '../options.json';\nimport axios from 'axios';\n\nconst posInterests = options.interests;\n\nconst posKeywords = options.keywords;\n\nexport default class SubmitPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keywords: [],\n            interests: [],\n        };\n\n        this.keywordSelect = this.keywordSelect.bind(this);\n        this.interestSelect = this.interestSelect.bind(this);\n        this.removeKeyword = this.removeKeyword.bind(this);\n        this.removeInterest = this.removeInterest.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    keywordSelect() {\n        let alreadyIn = false;\n        for (const keywordObj of this.state.keywords) {\n            if (keywordObj[0] === document.getElementById('skill').value) {\n                alreadyIn = true;\n                break;\n            }\n        }\n        if (!alreadyIn) {\n            this.setState({\n                keywords: [\n                    ...this.state.keywords,\n                    [\n                        document.getElementById('skill').value,\n                        document.getElementById('skill').options[document.getElementById('skill').selectedIndex].text\n                    ]\n                ]\n            });\n            document.getElementById('skill').value = 'placeholder';\n        }\n    }\n\n    interestSelect() {\n        let alreadyIn = false;\n        for (const keywordObj of this.state.interests) {\n            if (keywordObj[0] === document.getElementById('interest').value) {\n                alreadyIn = true;\n                break;\n            }\n        }\n        if (!alreadyIn) {\n            this.setState({\n                interests: [\n                    ...(this.state.interests.filter((value) => { return value[0] !== 'all'; })),\n                    [\n                        document.getElementById('interest').value,\n                        document.getElementById('interest').options[document.getElementById('interest').selectedIndex].text\n                    ]\n                ]\n            });\n            document.getElementById('interest').value = 'placeholder';\n        }\n    }\n\n    removeKeyword(value) {\n        this.setState({\n            keywords: this.state.keywords.filter((keyValue) => {\n                return keyValue[0] !== value;\n            })\n        });\n    }\n\n    removeInterest(value) {\n        this.setState({\n            interests: this.state.interests.filter((keyValue) => {\n                return keyValue[0] !== value;\n            })\n        });\n    }\n\n    async submit(e) {\n        e.preventDefault();\n        const object = {\n            author: document.getElementById('author').value,\n            description: document.getElementById('description').value,\n            image: document.getElementById('image-url').value,\n            name: document.getElementById('name').value,\n            skills: this.state.keywords.map((value) => { return value[0]; }),\n            interests: this.state.interests.map((value) => { return value[0]; })\n        };\n        const res = (await axios.post('https://us-central1-graph-intelligence.cloudfunctions.net/addProject', object, {\n            crossdomain: true\n        })).data;\n        console.log(res);\n    }\n\n    render() {\n        const keywordsList = this.state.keywords.map((value) => {\n            return (\n                <span style={{ cursor: 'pointer' }} onClick={() => { this.removeKeyword(value[0]); }} key={value[0]} className=\"badge badge-secondary ml-1\">{value[1]}</span>\n            );\n        });\n\n        const interestsList = this.state.interests.map((value) => {\n            return (\n                <span style={{ cursor: 'pointer' }} onClick={() => { this.removeInterest(value[0]); }} key={value[0]} className=\"badge badge-secondary ml-1\">{value[1]}</span>\n            );\n        });\n\n        return (\n            <div>\n                <Navbar />\n                <div className='container mt-4'>\n                    <form onSubmit={this.submit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\" className=\"font-weight-bold\">Project Title</label>\n                            <input type=\"text\" id='name' className=\"form-control\" placeholder=\"My Project\" required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"author\" className=\"font-weight-bold\">Author</label>\n                            <input type=\"text\" id='author' className=\"form-control\" placeholder=\"John Doe\" required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleFormControlInput1\" className=\"font-weight-bold\">Email Address</label>\n                            <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" required />\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div>\n                                    <div className='d-inline font-weight-bold'>\n                                        Skills:\n                                    </div>\n                                    <div className='d-inline'>\n                                        {keywordsList}\n                                    </div>\n                                </div>\n\n                                <div className=\"input-group mt-2\">\n                                    <select id='skill' className=\"custom-select\" onChange={this.keywordSelect}>\n                                        <option value='placeholder' selected>Add Skill...</option>\n                                        {\n                                            posKeywords.map((value) => {\n                                                return (\n                                                    <option key={value[0]} value={value[0]}>{value[1]}</option>\n                                                );\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div>\n                                    <div className='d-inline font-weight-bold'>\n                                        Related Fields:\n                                    </div>\n                                    <div className='d-inline'>\n                                        {interestsList}\n                                    </div>\n                                </div>\n\n                                <div className=\"input-group mt-2\">\n                                    <select id='interest' className=\"custom-select\" onChange={this.interestSelect}>\n                                        <option value='placeholder' selected>Add Interest...</option>\n                                        {\n                                            posInterests.map((value) => {\n                                                return (\n                                                    <option key={value[0]} value={value[0]}>{value[1]}</option>\n                                                );\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group mt-3\">\n                            <label className=\"font-weight-bold\">Project Description</label>\n                            <textarea id='description' className=\"form-control\" rows=\"3\" required></textarea>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-bold\">Image URL</label>\n                            <input id='image-url' type=\"text\" className=\"form-control\" placeholder=\"Enter image URL\" />\n                        </div>\n\n                        <button className='btn btn-primary'>Submit</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport SearchPage from './Pages/SearchPage';\nimport SubmitPage from './Pages/SubmitPage';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route exact path=\"/\" component={SearchPage} />\n                <Route exact path=\"/submit\" component={SubmitPage} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}